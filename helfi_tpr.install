<?php

/**
 * @file
 * Contains helfi_tpr installation procedures.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Installs the service entity type.
 */
function helfi_tpr_update_8001() : void {
  $manager = \Drupal::entityDefinitionUpdateManager();
  $entity_type = \Drupal::entityTypeManager()->getDefinition('tpr_service');
  $manager->installEntityType($entity_type);
}

/**
 * Install TPR service description field.
 */
function helfi_tpr_update_8002() : void {
  $manager = \Drupal::entityDefinitionUpdateManager();
  $fields = [];
  $fields['description'] = BaseFieldDefinition::create('text_with_summary')
    ->setTranslatable(TRUE)
    ->setLabel(new TranslatableMarkup('Description'))
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  foreach ($fields as $name => $field) {
    $manager->installFieldStorageDefinition($name, 'tpr_service', 'helfi_tpr', $field);
  }
}

/**
 * Install TPR unit service reference field.
 */
function helfi_tpr_update_8003() : void {
  $manager = \Drupal::entityDefinitionUpdateManager();
  $fields = [];
  $fields['services'] = BaseFieldDefinition::create('entity_reference')
    ->setLabel(new TranslatableMarkup('Services'))
    ->setSettings([
      'target_type' => 'tpr_service',
      'handler_settings' => [
        'target_bundles' => ['tpr_service'],
      ],
    ])
    ->setCardinality(BaseFieldDefinition::CARDINALITY_UNLIMITED)
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);

  foreach ($fields as $name => $field) {
    $manager->installFieldStorageDefinition($name, 'tpr_unit', 'helfi_tpr', $field);
  }
}
